(require 'package)
(setq package-archives '(("elpa" . "http://tromey.com/elpa/")
                         ("melpa-stable" . "https://stable.melpa.org/packages/")
                         ("melpa" . "https://melpa.org/packages/")
                         ("gnu" . "http://elpa.gnu.org/packages/")))

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-enabled-themes '(wombat))
 '(ignored-local-variable-values
   '((languagetool-local-disabled-rules
      "MISSING_COMMA_AFTER_INTRODUCTORY_PHRASE" "WHITESPACE_RULE"
      "CONSECUTIVE_SPACES" "CONSECUTIVE_SPACES" "WHITESPACE_RULE"
      "CURRENCY" "CURRENCY" "COMMA_PARENTHESIS_WHITESPACE" "CURRENCY"
      "COMMA_PARENTHESIS_WHITESPACE" "CURRENCY" "CURRENCY" "CURRENCY"
      "ENGLISH_WORD_REPEAT_RULE" "COMMA_PARENTHESIS_WHITESPACE"
      "COMMA_PARENTHESIS_WHITESPACE" "WHITESPACE_RULE"
      "COMMA_PARENTHESIS_WHITESPACE" "COMMA_PARENTHESIS_WHITESPACE"
      "WHITESPACE_RULE" "NON_STANDARD_WORD" "CURRENCY" "CURRENCY"
      "SPACE_BETWEEN_NUMBER_AND_WORD" "COMMA_PARENTHESIS_WHITESPACE"
      "COMMA_PARENTHESIS_WHITESPACE" "COMMA_PARENTHESIS_WHITESPACE"
      "COMMA_PARENTHESIS_WHITESPACE" "CURRENCY"
      "COMMA_PARENTHESIS_WHITESPACE" "COMMA_PARENTHESIS_WHITESPACE")))
 '(package-selected-packages
   '(auctex ellama haskell-mode helm-bibtex ivy-bibtex languagetool llm
	    markdown-mode markdown-preview-mode pdf-tools plz
	    plz-event-source proof-general))
 '(safe-local-variable-values
   '((bibtex-completion-bibliography "./Complexity.bib")
     (reftex-default-bibliography "./Complexity.bib"))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
(load "~/.emacs.d/pdf.el")
(load "~/.emacs.d/languagetool.el")
(defun g++-compile-and-run ()
  (interactive)
  (compile (format "g++ -std=c++20 %s -o run && ./run" (buffer-file-name))))

(defun test-code ()
  (interactive)
  (shell-command "tt"))

(autoload 'markdown-mode "markdown-mode.el"
  "Major mode for editing Markdown files" t)
(setq auto-mode-alist
      (cons '(".md" . markdown-mode) auto-mode-alist))

(setq markdown-open-command "/snap/bin/firefox")

(global-display-line-numbers-mode t)
(global-set-key (kbd "<f5>") 'g++-compile-and-run)
(global-set-key (kbd "<f7>") 'test-code)
(put 'upcase-region 'disabled nil)

(use-package ellama
  :ensure t
  :bind ("C-c e" . ellama-transient-main-menu)
  ;; send last message in chat buffer with C-c C-c
  :hook (org-ctrl-c-ctrl-c-final . ellama-chat-send-last-message)
  :init
  (setopt ellama-auto-scroll t)
  (setopt ellama-keymap-prefix "C-c e")
  :config
  ;; show ellama context in header line in all buffers
  (ellama-context-header-line-global-mode +1))

;; reftex config
(add-hook 'LaTeX-mode-hook 'turn-on-reftex)
(setq reftex-plug-into-AUCTeX t)
(setq reftex-enable-partial-scans t)
(setq reftex-save-parse-info t)
(setq reftex-use-multiple-selection-buffers t)
(setq reftex-bibliography-commands '("bibliography" "nobibliography" "addbibresource"))
(autoload 'reftex-mode "reftex" "RefTeXMinorMode" t)
(autoload 'turn-on-reftex "reftex" "RefTeXMinorMode" nil)
(autoload 'reftex-citation "reftex-cite" "Makecitation" nil)
(autoload 'reftex-index-phrase-mode "reftex-index" "Phrasemode" t)
(provide 'init-reftex)
;; ivy-bibtex
(autoload 'helm-bibtex "helm-bibtex" "" t)
